name: Ci Flow

on:
  push:
    branches:
jobs:
  lint-markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: markdownlint-cli
        uses: nosborn/github-action-markdown-cli@v1.1.1
        with:
          files: .
          config_file: ".markdownlint.yaml"
          ignore_files: "{**/pitch/themes/**,**/node_modules/**}"
  lint-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "pitch/Dockerfile"
  lint-helm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: install helm3
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Helm Lint
        run: |
          helm lint cicd-pitch
  tst-docker:
    runs-on: ubuntu-latest
    needs:
      - lint-markdown
      - lint-docker
      - lint-helm
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Terratest for Dockerfile
        run: |
          cd ./tests && go test -v -run TestDockerElevatorPitch

  tst-help:
    runs-on: ubuntu-latest
    needs:
      - tst-docker
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Starting the Kind Cluster
        run: |
          sudo apt-get install -y jq

      - name: install helm3
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: install skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/

      # https://github.com/engineerd/setup-kind
      - uses: engineerd/setup-kind@v0.4.0
        with:
          skipClusterCreation: true

      - name: Starting the Kind Cluster
        run: |
          go run mage.go -v kind:recreate

      - name: configure kind kubeconfig
        run: |
          kind export kubeconfig
          kubectl cluster-info
          kubectl get pods -n kube-system
          NODEDNSNAME=$(kubectl get nodes -ojson | jq '.items[0].status.addresses[0].address' -r | sed 's/\./-/g')
          echo "::set-env name=INGRESS_DOMAIN::${NODEDNSNAME}.sslip.io"
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: build container with skaffold
        run: |
          echo "::set-env name=TEST_IMAGE::$(skaffold build -o '{{json .}}' -q | jq '.builds[].tag' -r)"
      - name: add the image to kind node
        run: |
          kind load docker-image ${{ env.TEST_IMAGE }}

      - name: Start Terratest for Helm
        run: |
          cd ./tests && go test -v -run TestHelmCiCdPitchDeployment
